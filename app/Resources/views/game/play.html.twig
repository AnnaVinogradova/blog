{% extends 'base.html.twig' %}

{% block body %}
    <h3>Game</h3>
        <div id="content" class="container field">
            <div class="row">
            <h4>Player1: {{ game.player1 }}</h4>
            <h4>Player2: {{ game.player2 }}</h4>
            <h5>Your number: {{ number }} </h5>
                <form name="number_form" action="">
                    <input name="number" type="text">
                    <input name="send_number" value="Call number" type="submit">
                </form>
            </div>

            <div class="row">
                <h4>Messages:</h4>
                <ul id="messages" class="col-md-7 col-md-offset-2">
                    
                </ul>
            </div>
        </div>

<script src="{{ asset('bundles/goswebsocket/js/gos_web_socket_client.js') }}"></script>
<script src="{{ asset('bundles/goswebsocket/js/vendor/autobahn.min.js') }}"></script>
<script>
    var list = document.getElementById('messages');

    function checkInt(value){
        return value.match(/^\d+$/);
    }

    function repeatedNumbers(number){
            array[number]++;
            return array[number]<=1;
    }        

    function checkNumber(number){
        calledNumber = number.split('');
        for(i=0; i<=9; i++){
            array[i] = 0;
        }
        return calledNumber.every(repeatedNumbers);
    }

    array = new Array();
    var _WS_URI = "ws://{{ gos_web_socket_server_host }}:{{ gos_web_socket_server_port }}";
    var webSocket = WS.connect(_WS_URI);

    webSocket.on("socket/connect", function(session){
        console.log('Start web socket');
        session.subscribe("app/game/{{ game.id }}", function(uri, payload){
            li = document.createElement("li");
            li.appendChild(document.createTextNode(payload.msg));
            //list.appendChild(li);
            list.insertBefore(li, list.firstChild);
        });

        document.number_form.addEventListener("submit", function(e){
        number = document.number_form.number.value; 
        number = number.substring(0,4);  
        document.number_form.number.value = number;

        if(!checkInt(number) || !checkNumber(number)){
            li = document.createElement("li");
            li.appendChild(document.createTextNode("Invalid number " + number));
            list.insertBefore(li, list.firstChild);
        } else {
            session.publish("app/game/{{ game.id }}", number);
        }
        
        e.preventDefault();
    });
        
    })

webSocket.on("socket/disconnect", function(error){
    //error provides us with some insight into the disconnection: error.reason and error.code
    console.log("Disconnected for " + error.reason + " with code " + error.code);
});
</script>
{% endblock %}
